<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="25" passed="20" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-26T11:13:42 IST" name="Suite" finished-at="2022-10-26T11:14:15 IST" duration-ms="33280">
    <groups>
    </groups>
    <test started-at="2022-10-26T11:13:42 IST" name="Test" finished-at="2022-10-26T11:14:15 IST" duration-ms="33280">
      <class name="com.dt.api.properties.get.testGET_issues">
        <test-method signature="testGetissues()[pri:0, instance:com.dt.api.properties.get.testGET_issues@68999068]" started-at="2022-10-26T11:14:02 IST" name="testGetissues" finished-at="2022-10-26T11:14:03 IST" duration-ms="1238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetissues -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.get.testGET_issues@68999068]" started-at="2022-10-26T11:14:02 IST" name="init" finished-at="2022-10-26T11:14:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- com.dt.api.properties.get.testGET_issues -->
      <class name="com.dt.api.users.post.testPOST_ResendInvitation">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_ResendInvitation@647e447]" started-at="2022-10-26T11:13:50 IST" name="init" finished-at="2022-10-26T11:13:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost()[pri:0, instance:com.dt.api.users.post.testPOST_ResendInvitation@647e447]" started-at="2022-10-26T11:13:50 IST" name="testPost" finished-at="2022-10-26T11:13:51 IST" duration-ms="1168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
      </class> <!-- com.dt.api.users.post.testPOST_ResendInvitation -->
      <class name="com.dt.api.users.post.testPOST_UpdatePassword">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_UpdatePassword@28eaa59a]" started-at="2022-10-26T11:13:47 IST" name="init" finished-at="2022-10-26T11:13:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost()[pri:0, instance:com.dt.api.users.post.testPOST_UpdatePassword@28eaa59a]" started-at="2022-10-26T11:13:47 IST" name="testPost" finished-at="2022-10-26T11:13:49 IST" duration-ms="1360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
      </class> <!-- com.dt.api.users.post.testPOST_UpdatePassword -->
      <class name="com.dt.api.users.delete.testDELETE_User">
        <test-method signature="testDELETE001()[pri:0, instance:com.dt.api.users.delete.testDELETE_User@16ec5519]" started-at="2022-10-26T11:14:10 IST" name="testDELETE001" finished-at="2022-10-26T11:14:12 IST" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDELETE001 -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.delete.testDELETE_User@16ec5519]" started-at="2022-10-26T11:14:10 IST" name="init" finished-at="2022-10-26T11:14:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- com.dt.api.users.delete.testDELETE_User -->
      <class name="com.dt.api.users.put.testPUT_UserDetail">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.put.testPUT_UserDetail@1ea9f6af]" started-at="2022-10-26T11:14:14 IST" name="init" finished-at="2022-10-26T11:14:14 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPUT()[pri:0, instance:com.dt.api.users.put.testPUT_UserDetail@1ea9f6af]" started-at="2022-10-26T11:14:14 IST" name="testPUT" finished-at="2022-10-26T11:14:15 IST" duration-ms="1373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPUT -->
      </class> <!-- com.dt.api.users.put.testPUT_UserDetail -->
      <class name="com.dt.api.users.get.testGET_UserDetails">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.get.testGET_UserDetails@619713e5]" started-at="2022-10-26T11:13:59 IST" name="init" finished-at="2022-10-26T11:13:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testGet001()[pri:0, instance:com.dt.api.users.get.testGET_UserDetails@619713e5]" started-at="2022-10-26T11:13:59 IST" name="testGet001" finished-at="2022-10-26T11:14:00 IST" duration-ms="1251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet001 -->
      </class> <!-- com.dt.api.users.get.testGET_UserDetails -->
      <class name="com.dt.api.users.post.testPOST_Invitation">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_Invitation@3d51f06e]" started-at="2022-10-26T11:13:45 IST" name="init" finished-at="2022-10-26T11:13:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost()[pri:0, instance:com.dt.api.users.post.testPOST_Invitation@3d51f06e]" started-at="2022-10-26T11:13:45 IST" name="testPost" finished-at="2022-10-26T11:13:46 IST" duration-ms="1245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
      </class> <!-- com.dt.api.users.post.testPOST_Invitation -->
      <class name="com.dt.api.users.post.testPOST_VerifyOTP">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_VerifyOTP@15eb5ee5]" started-at="2022-10-26T11:13:42 IST" name="init" finished-at="2022-10-26T11:13:43 IST" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost()[pri:0, instance:com.dt.api.users.post.testPOST_VerifyOTP@15eb5ee5]" started-at="2022-10-26T11:13:43 IST" name="testPost" finished-at="2022-10-26T11:13:45 IST" duration-ms="2313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
      </class> <!-- com.dt.api.users.post.testPOST_VerifyOTP -->
      <class name="com.dt.api.users.post.testPOST_VerifyInvitation">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_VerifyInvitation@41fbdac4]" started-at="2022-10-26T11:13:51 IST" name="init" finished-at="2022-10-26T11:13:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost()[pri:0, instance:com.dt.api.users.post.testPOST_VerifyInvitation@41fbdac4]" started-at="2022-10-26T11:13:51 IST" name="testPost" finished-at="2022-10-26T11:13:52 IST" duration-ms="1148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
      </class> <!-- com.dt.api.users.post.testPOST_VerifyInvitation -->
      <class name="com.dt.api.properties.get.testGET_usstatelist">
        <test-method signature="testGetstatelist()[pri:0, instance:com.dt.api.properties.get.testGET_usstatelist@50eac852]" started-at="2022-10-26T11:14:09 IST" name="testGetstatelist" finished-at="2022-10-26T11:14:10 IST" duration-ms="1221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetstatelist -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.get.testGET_usstatelist@50eac852]" started-at="2022-10-26T11:14:09 IST" name="init" finished-at="2022-10-26T11:14:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- com.dt.api.properties.get.testGET_usstatelist -->
      <class name="com.dt.api.properties.get.testGET_propertybyID">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.get.testGET_propertybyID@2ef3eef9]" started-at="2022-10-26T11:14:04 IST" name="init" finished-at="2022-10-26T11:14:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testGetPropertyID()[pri:0, instance:com.dt.api.properties.get.testGET_propertybyID@2ef3eef9]" started-at="2022-10-26T11:14:04 IST" name="testGetPropertyID" finished-at="2022-10-26T11:14:05 IST" duration-ms="1224" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [403]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [403]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.dt.api.properties.get.testGET_propertybyID.testGetPropertyID(testGET_propertybyID.java:38)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPropertyID -->
      </class> <!-- com.dt.api.properties.get.testGET_propertybyID -->
      <class name="com.dt.api.properties.get.testGET_propertytype">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.get.testGET_propertytype@291ae]" started-at="2022-10-26T11:14:07 IST" name="init" finished-at="2022-10-26T11:14:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testGetpropertytype()[pri:0, instance:com.dt.api.properties.get.testGET_propertytype@291ae]" started-at="2022-10-26T11:14:07 IST" name="testGetpropertytype" finished-at="2022-10-26T11:14:08 IST" duration-ms="1206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetpropertytype -->
      </class> <!-- com.dt.api.properties.get.testGET_propertytype -->
      <class name="com.dt.api.properties.post.testPOST_filterusers">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.post.testPOST_filterusers@130161f7]" started-at="2022-10-26T11:13:57 IST" name="init" finished-at="2022-10-26T11:13:57 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost001()[pri:0, instance:com.dt.api.properties.post.testPOST_filterusers@130161f7]" started-at="2022-10-26T11:13:57 IST" name="testPost001" finished-at="2022-10-26T11:13:58 IST" duration-ms="1341" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <403>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <403>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:127)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.dt.api.properties.post.testPOST_filterusers.testPost001(testPOST_filterusers.java:38)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost001 -->
      </class> <!-- com.dt.api.properties.post.testPOST_filterusers -->
      <class name="com.dt.api.properties.post.testPOST_togglefavourite">
        <test-method signature="testPost001()[pri:0, instance:com.dt.api.properties.post.testPOST_togglefavourite@2c767a52]" started-at="2022-10-26T11:13:58 IST" name="testPost001" finished-at="2022-10-26T11:13:59 IST" duration-ms="1243" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <403>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <403>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:127)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.dt.api.properties.post.testPOST_togglefavourite.testPost001(testPOST_togglefavourite.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost001 -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.post.testPOST_togglefavourite@2c767a52]" started-at="2022-10-26T11:13:58 IST" name="init" finished-at="2022-10-26T11:13:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- com.dt.api.properties.post.testPOST_togglefavourite -->
      <class name="com.dt.api.properties.get.testGET_propertydetails">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.get.testGET_propertydetails@243c4f91]" started-at="2022-10-26T11:14:05 IST" name="init" finished-at="2022-10-26T11:14:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testGetpropertydetails()[pri:0, instance:com.dt.api.properties.get.testGET_propertydetails@243c4f91]" started-at="2022-10-26T11:14:05 IST" name="testGetpropertydetails" finished-at="2022-10-26T11:14:07 IST" duration-ms="1276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetpropertydetails -->
      </class> <!-- com.dt.api.properties.get.testGET_propertydetails -->
      <class name="com.dt.api.users.get.testGET_UserInvites">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.get.testGET_UserInvites@708f5957]" started-at="2022-10-26T11:14:00 IST" name="init" finished-at="2022-10-26T11:14:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testGet()[pri:0, instance:com.dt.api.users.get.testGET_UserInvites@708f5957]" started-at="2022-10-26T11:14:00 IST" name="testGet" finished-at="2022-10-26T11:14:02 IST" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
      </class> <!-- com.dt.api.users.get.testGET_UserInvites -->
      <class name="com.dt.api.users.post.testPOST_AcceptInvitation">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_AcceptInvitation@35ef1869]" started-at="2022-10-26T11:13:54 IST" name="init" finished-at="2022-10-26T11:13:54 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost001()[pri:0, instance:com.dt.api.users.post.testPOST_AcceptInvitation@35ef1869]" started-at="2022-10-26T11:13:54 IST" name="testPost001" finished-at="2022-10-26T11:13:55 IST" duration-ms="1327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost001 -->
      </class> <!-- com.dt.api.users.post.testPOST_AcceptInvitation -->
      <class name="com.dt.api.properties.get.testGET_rooms">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.get.testGET_rooms@61df66b6]" started-at="2022-10-26T11:14:08 IST" name="init" finished-at="2022-10-26T11:14:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testGetrooms()[pri:0, instance:com.dt.api.properties.get.testGET_rooms@61df66b6]" started-at="2022-10-26T11:14:08 IST" name="testGetrooms" finished-at="2022-10-26T11:14:09 IST" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetrooms -->
      </class> <!-- com.dt.api.properties.get.testGET_rooms -->
      <class name="com.dt.api.properties.delete.testDELETE_property">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.delete.testDELETE_property@2f7298b]" started-at="2022-10-26T11:14:12 IST" name="init" finished-at="2022-10-26T11:14:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testDELETEProp()[pri:0, instance:com.dt.api.properties.delete.testDELETE_property@2f7298b]" started-at="2022-10-26T11:14:12 IST" name="testDELETEProp" finished-at="2022-10-26T11:14:13 IST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDELETEProp -->
      </class> <!-- com.dt.api.properties.delete.testDELETE_property -->
      <class name="com.dt.api.users.post.testPOST_CancelInvitation">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_CancelInvitation@7ed7259e]" started-at="2022-10-26T11:13:46 IST" name="init" finished-at="2022-10-26T11:13:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost()[pri:0, instance:com.dt.api.users.post.testPOST_CancelInvitation@7ed7259e]" started-at="2022-10-26T11:13:46 IST" name="testPost" finished-at="2022-10-26T11:13:47 IST" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
      </class> <!-- com.dt.api.users.post.testPOST_CancelInvitation -->
      <class name="com.dt.api.properties.get.testGET_propertyallusers">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.get.testGET_propertyallusers@7722c3c3]" started-at="2022-10-26T11:14:03 IST" name="init" finished-at="2022-10-26T11:14:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testGetPropertyusers()[pri:0, instance:com.dt.api.properties.get.testGET_propertyallusers@7722c3c3]" started-at="2022-10-26T11:14:03 IST" name="testGetPropertyusers" finished-at="2022-10-26T11:14:04 IST" duration-ms="1245" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [403] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [403] but found [400]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.dt.api.properties.get.testGET_propertyallusers.testGetPropertyusers(testGET_propertyallusers.java:38)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPropertyusers -->
      </class> <!-- com.dt.api.properties.get.testGET_propertyallusers -->
      <class name="com.dt.api.properties.post.testPOST_addproperty">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.post.testPOST_addproperty@c33b74f]" started-at="2022-10-26T11:13:55 IST" name="init" finished-at="2022-10-26T11:13:55 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost001()[pri:0, instance:com.dt.api.properties.post.testPOST_addproperty@c33b74f]" started-at="2022-10-26T11:13:55 IST" name="testPost001" finished-at="2022-10-26T11:13:57 IST" duration-ms="1344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost001 -->
      </class> <!-- com.dt.api.properties.post.testPOST_addproperty -->
      <class name="com.dt.api.users.post.testPOST_RegisterUser">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_RegisterUser@3c407114]" started-at="2022-10-26T11:13:52 IST" name="init" finished-at="2022-10-26T11:13:52 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost()[pri:0, instance:com.dt.api.users.post.testPOST_RegisterUser@3c407114]" started-at="2022-10-26T11:13:52 IST" name="testPost" finished-at="2022-10-26T11:13:54 IST" duration-ms="1395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
      </class> <!-- com.dt.api.users.post.testPOST_RegisterUser -->
      <class name="com.dt.api.users.post.testPOST_ForgetPassword">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.users.post.testPOST_ForgetPassword@3427b02d]" started-at="2022-10-26T11:13:49 IST" name="init" finished-at="2022-10-26T11:13:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPost()[pri:0, instance:com.dt.api.users.post.testPOST_ForgetPassword@3427b02d]" started-at="2022-10-26T11:13:49 IST" name="testPost" finished-at="2022-10-26T11:13:50 IST" duration-ms="1293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
      </class> <!-- com.dt.api.users.post.testPOST_ForgetPassword -->
      <class name="com.dt.api.properties.put.testPUT_propertyDetail">
        <test-method is-config="true" signature="init()[pri:0, instance:com.dt.api.properties.put.testPUT_propertyDetail@188715b5]" started-at="2022-10-26T11:14:13 IST" name="init" finished-at="2022-10-26T11:14:13 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testPUT()[pri:0, instance:com.dt.api.properties.put.testPUT_propertyDetail@188715b5]" started-at="2022-10-26T11:14:13 IST" name="testPUT" finished-at="2022-10-26T11:14:14 IST" duration-ms="1136" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:127)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.dt.api.properties.put.testPUT_propertyDetail.testPUT(testPUT_propertyDetail.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPUT -->
      </class> <!-- com.dt.api.properties.put.testPUT_propertyDetail -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
